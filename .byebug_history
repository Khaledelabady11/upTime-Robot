c
links.count
links
    links = @document.search '.s-product-image-container a.a-link-normal.s-no-outline'
links.count
    links = @document.search '.s-product-image-container a.a-link-normal.s-no-outline'
links.count
    links = @document.search 'a.a-link-normal.s-no-outline'
links.count
    links = @document.search '.a-link-normal.s-no-outline'
    links = @document.search '.a-link-normal .s-no-outline'
links.select { |url| url.match? URL_REGEXP }
links.select { |url| !url.match? URL_REGEXP }
links.select { |url| !url.match? URL_REGEXP }.first
links.select { |url| !url.match? URL_REGEXP }.uniq.count
links.select { |url| url.match? URL_REGEXP }.uniq.count
links.count
links
links.select { |url| url.match? URL_REGEXP }.uniq.count
links.count
links.select { |url| url.match? URL_REGEXP }.count
links.select { |url| url.match? URL_REGEXP }
links = links.map { |item| "https://www.amazon.eg" + item }
links.map { |item| "https://www.amazon.eg" + item }
links = links.map(&:values).flatten.uniq
links.map(&:values).flatten.uniq.count
links.uniq.map(&:values).flatten
links.map(&:values).flatten.uniq.count
links.uniq.map(&:values).flatten.count
links.uniq.map(&:values).flatten
links.uniq.map(&:values)
links.uniq.count
links.count
links
ls.map { |url| url.match? URL_REGEXP }
ls.select { |url| url.match? URL_REGEXP }
ls
  URL_REGEXP = %r{\A(http|https)://[a-z0-9]+([\-.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(/.*)?\z}ix
ls = links.first.values.map { |item|  "https://www.amazon.eg" + item }
links.first.values
"http://www.amazon.eg" + "/MQ9E3AH-A/dp/B0BDJBNN7N/ref=sr_1_1?pf_rd_i=21832883031&pf_rd_m=A1ZVRGNO5AYLOV&pf_rd_p=3791cc79-77bb-4e44-a238-b42dd45cafcd&pf_rd_r=NHASNM3YRNMD34G0YVN7&pf_rd_s=merchandised-search-14&pf_rd_t=101&qid=1664130302&refinements=p_89%3AApple&s=electronics&sr=1-1"
links.first.values
links.first.text
links.first.values
links.first
links.class
links
links = @document.search '.a-link-normal'
@document.search '.a-link-normal'
@document.search 'a .a-link-normal'
@document.search 'a'
@document
c
page
page.search("script").remove
scripts = page.search "script"
page.remove("script")
scripts.count
scripts = page.search "script"
page["body script"]
page["script"]
feature.map(&:text).flatten
feature.map(&:text).flatten.count
feature.map(&:text).flatten
feature.count
feature = page.search "#feature-bullets li"
feature.first.text
feature.first
feature.count
feature = page.search "#feature-bullets"
product.first.values
product.first.text
product.count
product = page.search ".a-normal"
product = page.search ".a-normal .a-spacing-micro"
product = page.search ".a-normal < .a-spacing-micro"
product = page.search ".a-normal .a-spacing-micro"
product.first.text
product.first
product.count
product = page.search "#productOverview_feature_div table"
product.first.text
product.first
product.class
product.count
product
product = page.search "#productOverview_feature_div"
product = page.search "productOverview_feature_div"
lis.count
lis
lis = page.search "li"
uls.count
uls = page.search "ul"
h1[3].text
h1[1].text
h1[1]
h1
h1.second
h1.first.text
h1 = page.search "h1"
h1.first.text
    page.encoding = 'utf-8'
page.encoding
h1.first.text
h1.first.values
h1.first
h1.count
h1 = page.search "h1"
page.title
h1.first.text
h1.first
h1.count
h1 = page.search "h1"
links = page.search "h1"
links.map(&:values).flatten
links.first.values
links.first
links.count
links = page.search "a"
page.search "a"
page.search "<a"
page
